apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
import com.android.build.gradle.internal.dsl.SigningConfig

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.baseapp"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            signingConfig getSignInfo("../config/releasesign.properties")
            buildConfigField "String", "BASE_URL", "\"http://wanandroid.com/\""
            buildConfigField "String", "APP_NAME", "\"基础包\""
            buildConfigField "String", "BASE_H5_URL", "\"https://www.baidu.com/\""
            resValue "string", "app_name", "\"rx基础包\""

        }
        release {
            minifyEnabled false
            shrinkResources false
            signingConfig getSignInfo("../config/releasesign.properties")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            buildConfigField "String", "BASE_URL", "\"http://zuojiacheapi.test.cheegu.com/\""
            buildConfigField "String", "APP_NAME", "\"基础包\""
            buildConfigField "String", "BASE_H5_URL", "\"https://www.baidu.com/\""
            resValue "string", "app_name", "\"rx基础包\""

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                def versionName = variant.mergedFlavor.versionName
                def customName = versionName + '-' + getDate()
                outputFileName = "baseApp-${variant.name}-$customName" + ".apk"
            }
    }
}

def String getDate() {
    Date date = new Date()
    String dates = date.format("yyyyMMdd-HH", TimeZone.getTimeZone("GMT+08:00"))
    return dates
}

def getSignInfo(propFileName) {
    def SigningConfig signingConfig = new SigningConfig("signInfo")
    File propFile = file(propFileName)
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        signingConfig.storeFile = file(props['STORE_FILE'])
        signingConfig.storePassword = props['STORE_PASSWORD']
        signingConfig.keyAlias = props['KEY_ALIAS']
        signingConfig.keyPassword = props['KEY_PASSWORD']
        println('signConfig is exits')
    } else {
        println('sign config is null')
        signingConfig = null
    }
    return signingConfig
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha09'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    //cardView
    implementation 'androidx.cardview:cardview:1.0.0'
    //   compile 'com.google.code.gson:gson:2.8.5'//导入Gson 库
    //导入RxJava 和 RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'//导入retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'//转换器，请求结果转换成Model
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'//配合Rxjava 使用
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'//添加HttpLoggingInterceptor进行调试
 //   implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'
    //防止rxjava内存泄露
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.42'

    // 动态权限
    // For developers using AndroidX in their applications
    implementation 'pub.devrel:easypermissions:3.0.0'
    // For developers using the Android Support Library
    implementation 'pub.devrel:easypermissions:3.0.0'
    //状态栏处理
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'

}
